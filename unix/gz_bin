#!/bin/bash
#================================================
GPWD=$PWD
#================================================
. $GPATH/.config
#================================================
lCheckIn="GPATH" ; if [ "${!lCheckIn}" = "" ] || ! [ -d "${!lCheckIn}" ] ; then echo $(gz_color s "$lCheckIn ?" yellow fg) ; exit ; fi 
lCheckIn="GBIN_PATH" ; if [ "${!lCheckIn}" = "" ] || ! [ -d "${!lCheckIn}" ] ; then echo $(gz_color s "$lCheckIn ?" yellow fg) ; exit ; fi 
#================================================
GBin_main() {
lArgSize="$#"
if [ "$lArgSize" = "0" ] ; then GBin_help "$@"
else GBin_process "$@" ; fi
}
#================================================
GBin_help() {
lScript=$(gz_string filename "$0")
GSCRIPT="\t\033[0;35m${lScript}\033[0m"
GCOMMENT="\033[0;33m%s\033[0m"
GHELP="$GSCRIPT : $GCOMMENT\n"
GREQUEST="\033[36m%s\033[0m"
GPROCESS="$GSCRIPT $GREQUEST : $GCOMMENT\n"
printf "\n"
printf "%s\n" "Description:"
printf "\t%s\n" "Operations sur le dossier ReadyBin."
printf "\n"
printf "%s\n" "Utilisation:"
printf "$GHELP" "afficher aide"
printf "$GPROCESS" "git_pa" "ajouter commiter valider modifications git"
printf "$GPROCESS" "git_pu" "tirer modifications git"
printf "$GPROCESS" "chmod" "autoriser permission fichiers"
printf "$GPROCESS" "cp <file_in> <file_out>" "copier fichier"
printf "$GPROCESS" "cd" "se deplacer dans dossier"
printf "$GPROCESS" "rm <file_in>" "se deplacer dans dossier"
printf "$GPROCESS" "ll" "lister fichiers"
printf "$GPROCESS" "pwd" "afficher chemin"
printf "$GPROCESS" "nano <file_in>" "creer fichier nano"
printf "\n"
}
#================================================
GBin_process() {
lArgSize="$#"
lArgCount=1
lRunFlag=0
while [ 1 ] ; do
if [ "$lArgCount" -gt "$lArgSize" ] ; then break ; fi
lKey=${!lArgCount} ; lArgCount=$(gz_string math "$lArgCount + 1")
if [ "$lKey" = "git_p" ] ; then 
GBin_git_push ; lRunFlag=1
# git_pa
elif [ "$lKey" = "git_pa" ] ; then 
GBin_git_push_all ; lRunFlag=1
# git_pu
elif [ "$lKey" = "git_pu" ] ; then 
GBin_git_pull ; lRunFlag=1
# chmod
elif [ "$lKey" = "chmod" ] ; then 
GBin_chmod ; lRunFlag=1
# cp
elif [ "$lKey" = "cp" ] ; then 
lFileIn=${!lArgCount} ; lArgCount=$(gz_string math "$lArgCount + 1")
lFileOut=${!lArgCount} ; lArgCount=$(gz_string math "$lArgCount + 1")
GBin_cp "$lFileIn" "$lFileOut" ; lRunFlag=1
# cd
elif [ "$lKey" = "cd" ] ; then 
GBin_cd ; lRunFlag=1
# rm
elif [ "$lKey" = "rm" ] ; then 
lFile=${!lArgCount} ; lArgCount=$(gz_string math "$lArgCount + 1")
GBin_rm "$lFile" ; lRunFlag=1
# ll
elif [ "$lKey" = "ll" ] ; then 
GBin_ll ; lRunFlag=1
# pwd
elif [ "$lKey" = "pwd" ] ; then 
GBin_pwd ; lRunFlag=1
# nano
elif [ "$lKey" = "nano" ] ; then 
lFile=${!lArgCount} ; lArgCount=$(gz_string math "$lArgCount + 1")
GBin_nano_create_file "$lFile" ; lRunFlag=1
#
fi
done
if [ "$lRunFlag" = "0" ] ; then GBin_help ; fi 
}
#================================================
GBin_git_push_all() {
cd $GBIN_PATH
git add --all
git commit -m "Initial Commit"
git push -u origin master
cd $GPWD
}
#================================================
GBin_git_pull() {
cd $GBIN_PATH
git pull
cd $GPWD
}
#================================================
GBin_chmod() {
chmod -R 777 $GBIN_PATH
}
#================================================
GBin_cp() {
local lFileIn=$1
local lFileOut=$2
cd $GPATH
cp -f $lFileIn $lFileOut
cd $GPWD
}
#================================================
GBin_cd() {
cd $GPATH
}
#================================================
GBin_rm() {
local lFile=$1
cd $GPATH
rm -f $lFile
cd $GPWD
}
#================================================
GBin_ll() {
ls -l $GPATH
}
#================================================
GBin_pwd() {
echo $GPATH
}
#================================================
GBin_nano_create_file() {
local lFile=$1
lPath=$GPATH/$lFile
nano $lPath
}
#================================================
GBin_main "$@"
#================================================
