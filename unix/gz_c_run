#!/bin/bash
#================================================
GPWD=$PWD
#================================================
G_STATE="S_INIT"
#================================================
GC_Main() {
while [ 1 ] ; do
case "$G_STATE" in 
    "S_ADMIN") GC_ADMIN ;;
    "S_INIT") GC_INIT ;;
    "S_METHOD") GC_METHOD ;;
    "S_CHOICE") GC_CHOICE ;;
    #
    "S_C_COMPILE_C_PATH") GC_C_COMPILE_C_PATH ;;
    "S_C_COMPILE_C_NAME") GC_C_COMPILE_C_NAME ;;
    "S_C_COMPILE_C_ARGS") GC_C_COMPILE_C_ARGS ;;
    "S_C_COMPILE") GC_C_COMPILE ;;
    #
    "S_C_CLEAN_C_PATH") GC_C_CLEAN_C_PATH ;;
    "S_C_CLEAN_C_NAME") GC_C_CLEAN_C_NAME ;;
    "S_C_CLEAN") GC_C_CLEAN ;;
    #
    "S_SAVE") GC_SAVE ;;
    "S_LOAD") GC_LOAD ;;
    "S_QUIT") GC_QUIT ;;
    *) break ;;
esac    
done
}
#================================================
GC_ADMIN() {
gz_admin
G_STATE="S_END"
}
#================================================
GC_INIT() {
printf "\n"
printf "C !!!\n"
printf "\t%2s : %s\n" "-q" "quitter l'application"
printf "\t%2s : %s\n" "-i" "reinitialiser l'application"
printf "\t%2s : %s\n" "-a" "redemarrer l'administration"
printf "\t%2s : %s\n" "-v" "valider les configurations"
printf "\n"
G_STATE="S_LOAD"
}
#================================================
GC_METHOD() {
printf "C :\n"
printf "\t%2s : %s\n" "1" "compiler le projet"
printf "\t%2s : %s\n" "2" "nettoyer le projet"
printf "\n"
G_STATE="S_CHOICE"
}
#================================================
GC_CHOICE() {
read -p "C ($G_C_ID) ? " lAnswer
if [ "$lAnswer" = "" ] ; then lAnswer="$G_C_ID" ; fi
if [ "$lAnswer" = "-q" ] ; then G_STATE="S_END"
elif [ "$lAnswer" = "-i" ] ; then G_STATE="S_INIT" 
elif [ "$lAnswer" = "-a" ] ; then G_STATE="S_ADMIN"
#
elif [ "$lAnswer" = "1" ] ; then G_STATE="S_C_COMPILE_C_PATH" ; G_C_ID="$lAnswer"
elif [ "$lAnswer" = "2" ] ; then G_STATE="S_C_CLEAN_C_PATH" ; G_C_ID="$lAnswer"
#
fi
}
#================================================
GC_C_COMPILE_C_PATH() {
read -p "G_C_PATH ($G_C_PATH) ? " lAnswer
if [ "$lAnswer" = "" ] ; then lAnswer="$G_C_PATH" ; fi
if [ "$lAnswer" = "-q" ] ; then G_STATE="S_END"
elif [ "$lAnswer" = "-i" ] ; then G_STATE="S_INIT" 
elif [ "$lAnswer" = "-a" ] ; then G_STATE="S_ADMIN"
elif [ "$lAnswer" = "-v" ] ; then G_STATE="S_C_COMPILE"
elif [ "$lAnswer" != "" ] ; then G_STATE="S_C_COMPILE_C_NAME" ; G_C_PATH="$lAnswer"
fi
}
#================================================
GC_C_COMPILE_C_NAME() {
read -p "G_C_NAME ($G_C_NAME) ? " lAnswer
if [ "$lAnswer" = "" ] ; then lAnswer="$G_C_NAME" ; fi
if [ "$lAnswer" = "-q" ] ; then G_STATE="S_END"
elif [ "$lAnswer" = "-i" ] ; then G_STATE="S_INIT" 
elif [ "$lAnswer" = "-a" ] ; then G_STATE="S_ADMIN"
elif [ "$lAnswer" = "-v" ] ; then G_STATE="S_C_COMPILE"
elif [ "$lAnswer" != "" ] ; then G_STATE="S_C_COMPILE_C_ARGS" ; G_C_NAME="$lAnswer"
fi
}
#================================================
GC_C_COMPILE_C_ARGS() {
read -p "G_C_ARGS ($G_C_ARGS) ? " lAnswer
if [ "$lAnswer" = "" ] ; then lAnswer="$G_C_ARGS" ; fi
if [ "$lAnswer" = "-q" ] ; then G_STATE="S_END"
elif [ "$lAnswer" = "-i" ] ; then G_STATE="S_INIT" 
elif [ "$lAnswer" = "-a" ] ; then G_STATE="S_ADMIN"
elif [ "$lAnswer" = "-v" ] ; then G_STATE="S_C_COMPILE"
elif [ "$lAnswer" != "" ] ; then G_STATE="S_C_COMPILE" ; G_C_ARGS="$lAnswer"
fi
}
#================================================
GC_C_COMPILE() {
echo
lBuldPath="$G_C_PATH/$G_C_NAME/unix"
lMakefile="Makefile.unix"
cd $lBuldPath
make -f "$lMakefile" all args="$G_C_ARGS"
G_STATE="S_SAVE"
}
#================================================
GC_C_CLEAN_C_PATH() {
read -p "G_C_PATH ($G_C_PATH) ? " lAnswer
if [ "$lAnswer" = "" ] ; then lAnswer="$G_C_PATH" ; fi
if [ "$lAnswer" = "-q" ] ; then G_STATE="S_END"
elif [ "$lAnswer" = "-i" ] ; then G_STATE="S_INIT" 
elif [ "$lAnswer" = "-a" ] ; then G_STATE="S_ADMIN"
elif [ "$lAnswer" = "-v" ] ; then G_STATE="S_C_CLEAN"
elif [ "$lAnswer" != "" ] ; then G_STATE="S_C_CLEAN_C_NAME" ; G_C_PATH="$lAnswer"
fi
}
#================================================
GC_C_CLEAN_C_NAME() {
read -p "G_C_NAME ($G_C_NAME) ? " lAnswer
if [ "$lAnswer" = "" ] ; then lAnswer="$G_C_NAME" ; fi
if [ "$lAnswer" = "-q" ] ; then G_STATE="S_END"
elif [ "$lAnswer" = "-i" ] ; then G_STATE="S_INIT" 
elif [ "$lAnswer" = "-a" ] ; then G_STATE="S_ADMIN"
elif [ "$lAnswer" = "-v" ] ; then G_STATE="S_C_CLEAN"
elif [ "$lAnswer" != "" ] ; then G_STATE="S_C_CLEAN" ; G_C_NAME="$lAnswer"
fi
}
#================================================
GC_C_CLEAN() {
echo
lBuldPath="$G_C_PATH/$G_C_NAME/unix"
lMakefile="Makefile.unix"
cd $lBuldPath
make -f "$lMakefile" clean
G_STATE="S_SAVE"
}
#================================================
GC_SAVE() {
gz_process_in "config_save" "G_C_ID" "$G_C_ID"
gz_process_in "config_save" "G_C_PATH" "$G_C_PATH"
gz_process_in "config_save" "G_C_NAME" "$G_C_NAME"
gz_process_in "config_save" "G_C_ARGS" "$G_C_ARGS"
G_STATE="S_QUIT"
}
#================================================
GC_LOAD() {
G_C_ID=$(gz_process_in "config_load" "G_C_ID")
G_C_PATH=$(gz_process_in "config_load" "G_C_PATH")
G_C_NAME=$(gz_process_in "config_load" "G_C_NAME")
G_C_ARGS=$(gz_process_in "config_load" "G_C_ARGS")
G_STATE="S_METHOD"
}
#================================================
GC_QUIT() {
echo
read -p "QUIT (Oui/[N]on) ? " lAnswer
if [ "$lAnswer" = "-q" ] ; then G_STATE="S_END"
elif [ "$lAnswer" = "-i" ] ; then G_STATE="S_INIT"
elif [ "$lAnswer" = "-a" ] ; then G_STATE="S_ADMIN"
elif [ "$lAnswer" = "o" ] ; then G_STATE="S_END"
elif [ "$lAnswer" = "n" ] ; then G_STATE="S_INIT"
elif [ "$lAnswer" = "" ] ; then G_STATE="S_INIT"
fi
}
#================================================
GC_Main
#================================================
cd $GPWD
#================================================
