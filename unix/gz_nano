#!/bin/bash
#================================================
GPWD=$PWD
#================================================
GPATH=/home/pi/Programs/ReadyStudio/ReadyBin/unix
#================================================
GNano_main() {
lArgSize="$#"
if [ "$lArgSize" = "0" ] ; then GNano_help "$@"
else GNano_process "$@" ; fi
}
#================================================
GNano_help() {
lScript=$(gz_string filename "$0")
GSCRIPT="\t\033[0;35m${lScript}\033[0m"
GCOMMENT="\033[0;33m%s\033[0m"
GHELP="$GSCRIPT : $GCOMMENT\n"
GREQUEST="\033[36m%s\033[0m"
GPROCESS="$GSCRIPT $GREQUEST : $GCOMMENT\n"
printf "\n"
printf "%s\n" "Description:"
printf "\t%s\n" "Operations sur l'editeur nano."
printf "\n"
printf "%s\n" "Utilisation:"
printf "$GHELP" "afficher aide"
printf "$GPROCESS" "c <file_in>" "creer fichier"
printf "\n"
}
#================================================
GNano_process() {
lArgSize="$#"
lArgCount=1
lRunFlag=0
while [ 1 ] ; do
if [ "$lArgCount" -gt "$lArgSize" ] ; then break ; fi
lKey=${!lArgCount} ; lArgCount=$(gz_string math "$lArgCount + 1")
# c
if [ "$lKey" = "c" ] ; then 
lFile=${!lArgCount} ; lArgCount=$(gz_string math "$lArgCount + 1")
GNano_create_file "$lFile" ; lRunFlag=1
#
fi
done
if [ "$lRunFlag" = "0" ] ; then GNano_help ; fi 
}
#================================================
GNano_create_file() {
local lFile=$1
lPath=$GPATH/$lFile
nano $lPath
}
#================================================
GNano_main "$@"
#================================================
