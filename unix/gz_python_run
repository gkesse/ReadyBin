#!/bin/bash
#================================================
GPWD=$PWD
#================================================
G_STATE="S_INIT"
#================================================
. $GPATH/env
#================================================
GPython_Main() {
while [ 1 ] ; do
case "$G_STATE" in 
    "S_ADMIN") GPython_ADMIN ;;
    "S_INIT") GPython_INIT ;;
    "S_METHOD") GPython_METHOD ;;
    "S_CHOICE") GPython_CHOICE ;;
    #
    "S_PYTHON_COMPILE_PYTHON_PATH") GPython_PYTHON_COMPILE_PYTHON_PATH ;;
    "S_PYTHON_COMPILE_PYTHON_NAME") GPython_PYTHON_COMPILE_PYTHON_NAME ;;
    "S_PYTHON_COMPILE_PYTHON_COMPILO") GPython_PYTHON_COMPILE_PYTHON_COMPILO ;;
    "S_PYTHON_COMPILE_PYTHON_TARGET") GPython_PYTHON_COMPILE_PYTHON_TARGET ;;
    "S_PYTHON_COMPILE_PYTHON_ARGS") GPython_PYTHON_COMPILE_PYTHON_ARGS ;;
    "S_PYTHON_COMPILE") GPython_PYTHON_COMPILE ;;
    #
    "S_TEST_COMPILE_TEST_PATH") GPython_TEST_COMPILE_TEST_PATH ;;
    "S_TEST_COMPILE_TEST_NAME") GPython_TEST_COMPILE_TEST_NAME ;;
    "S_TEST_COMPILE_TEST_COMPILO") GPython_TEST_COMPILE_TEST_COMPILO ;;
    "S_TEST_COMPILE_TEST_TARGET") GPython_TEST_COMPILE_TEST_TARGET ;;
    "S_TEST_COMPILE_TEST_ARGS") GPython_TEST_COMPILE_TEST_ARGS ;;
    "S_TEST_COMPILE") GPython_TEST_COMPILE ;;
    #
    "S_TEST_COPY_TEST_PATH") GPython_TEST_COPY_TEST_PATH ;;
    "S_TEST_COPY_COPY_SRC") GPython_TEST_COPY_COPY_SRC ;;
    "S_TEST_COPY_COPY_DST") GPython_TEST_COPY_COPY_DST ;;
    "S_TEST_COPY") GPython_TEST_COPY ;;
    #
    "S_SAVE") GPython_SAVE ;;
    "S_LOAD") GPython_LOAD ;;
    "S_QUIT") GPython_QUIT ;;
    *) break ;;
esac    
done
}
#================================================
GPython_ADMIN() {
gz_admin
G_STATE="S_END"
}
#================================================
GPython_INIT() {
printf "\n"
printf "PYTHON !!!\n"
printf "\t%2s : %s\n" "-q" "quitter l'application"
printf "\t%2s : %s\n" "-i" "reinitialiser l'application"
printf "\t%2s : %s\n" "-a" "redemarrer l'administration"
printf "\t%2s : %s\n" "-v" "valider les configurations"
printf "\n"
G_STATE="S_LOAD"
}
#================================================
GPython_METHOD() {
printf "PYTHON :\n"
printf "\t%2s : %s\n" "1" "compiler le projet"
printf "\t%2s : %s\n" "2" "compiler le projet TEST"
printf "\t%2s : %s\n" "3" "copier un projet TEST"
printf "\n"
G_STATE="S_CHOICE"
}
#================================================
GPython_CHOICE() {
read -p "PYTHON ($G_PYTHON_ID) ? " lAnswer
if [ "$lAnswer" = "" ] ; then lAnswer="$G_PYTHON_ID" ; fi
if [ "$lAnswer" = "-q" ] ; then G_STATE="S_END"
elif [ "$lAnswer" = "-i" ] ; then G_STATE="S_INIT" 
elif [ "$lAnswer" = "-a" ] ; then G_STATE="S_ADMIN"
#
elif [ "$lAnswer" = "1" ] ; then G_STATE="S_PYTHON_COMPILE_PYTHON_PATH" ; G_PYTHON_ID="$lAnswer"
elif [ "$lAnswer" = "2" ] ; then G_STATE="S_TEST_COMPILE_TEST_PATH" ; G_PYTHON_ID="$lAnswer"
elif [ "$lAnswer" = "3" ] ; then G_STATE="S_TEST_COPY_TEST_PATH" ; G_PYTHON_ID="$lAnswer"
#
fi
}
#================================================
GPython_TEST_COPY_TEST_PATH() {
read -p "G_TEST_PATH ($G_TEST_PATH) ? " lAnswer
if [ "$lAnswer" = "" ] ; then lAnswer="$G_TEST_PATH" ; fi
if [ "$lAnswer" = "-q" ] ; then G_STATE="S_END"
elif [ "$lAnswer" = "-i" ] ; then G_STATE="S_INIT" 
elif [ "$lAnswer" = "-a" ] ; then G_STATE="S_ADMIN"
elif [ "$lAnswer" = "-v" ] ; then G_STATE="S_TEST_COPY"
elif [ "$lAnswer" != "" ] ; then G_STATE="S_TEST_COPY_COPY_SRC" ; G_TEST_PATH="$lAnswer"
fi
}
#================================================
GPython_TEST_COPY_COPY_SRC() {
read -p "G_COPY_SRC ($G_COPY_SRC) ? " lAnswer
if [ "$lAnswer" = "" ] ; then lAnswer="$G_COPY_SRC" ; fi
if [ "$lAnswer" = "-q" ] ; then G_STATE="S_END"
elif [ "$lAnswer" = "-i" ] ; then G_STATE="S_INIT" 
elif [ "$lAnswer" = "-a" ] ; then G_STATE="S_ADMIN"
elif [ "$lAnswer" = "-v" ] ; then G_STATE="S_TEST_COPY"
elif [ "$lAnswer" != "" ] ; then G_STATE="S_TEST_COPY_COPY_DST" ; G_COPY_SRC="$lAnswer"
fi
}
#================================================
GPython_TEST_COPY_COPY_DST() {
read -p "G_COPY_DST ($G_COPY_DST) ? " lAnswer
if [ "$lAnswer" = "" ] ; then lAnswer="$G_COPY_DST" ; fi
if [ "$lAnswer" = "-q" ] ; then G_STATE="S_END"
elif [ "$lAnswer" = "-i" ] ; then G_STATE="S_INIT" 
elif [ "$lAnswer" = "-a" ] ; then G_STATE="S_ADMIN"
elif [ "$lAnswer" = "-v" ] ; then G_STATE="S_TEST_COPY"
elif [ "$lAnswer" != "" ] ; then G_STATE="S_TEST_COPY" ; G_COPY_DST="$lAnswer"
fi
}
#================================================
GPython_TEST_COPY() {
echo
cd $G_TEST_PATH
cp -rf $G_COPY_SRC $G_COPY_DST
G_STATE="S_SAVE"
}
#================================================
GPython_PYTHON_COMPILE_PYTHON_PATH() {
read -p "G_PYTHON_PATH ($G_PYTHON_PATH) ? " lAnswer
if [ "$lAnswer" = "" ] ; then lAnswer="$G_PYTHON_PATH" ; fi
if [ "$lAnswer" = "-q" ] ; then G_STATE="S_END"
elif [ "$lAnswer" = "-i" ] ; then G_STATE="S_INIT" 
elif [ "$lAnswer" = "-a" ] ; then G_STATE="S_ADMIN"
elif [ "$lAnswer" = "-v" ] ; then G_STATE="S_PYTHON_COMPILE"
elif [ "$lAnswer" != "" ] ; then G_STATE="S_PYTHON_COMPILE_PYTHON_NAME" ; G_PYTHON_PATH="$lAnswer"
fi
}
#================================================
GPython_PYTHON_COMPILE_PYTHON_NAME() {
read -p "G_PYTHON_NAME ($G_PYTHON_NAME) ? " lAnswer
if [ "$lAnswer" = "" ] ; then lAnswer="$G_PYTHON_NAME" ; fi
if [ "$lAnswer" = "-q" ] ; then G_STATE="S_END"
elif [ "$lAnswer" = "-i" ] ; then G_STATE="S_INIT" 
elif [ "$lAnswer" = "-a" ] ; then G_STATE="S_ADMIN"
elif [ "$lAnswer" = "-v" ] ; then G_STATE="S_PYTHON_COMPILE"
elif [ "$lAnswer" != "" ] ; then G_STATE="S_PYTHON_COMPILE_PYTHON_COMPILO" ; G_PYTHON_NAME="$lAnswer"
fi
}
#================================================
GPython_PYTHON_COMPILE_PYTHON_COMPILO() {
read -p "G_PYTHON_COMPILO ($G_PYTHON_COMPILO) ? " lAnswer
if [ "$lAnswer" = "" ] ; then lAnswer="$G_PYTHON_COMPILO" ; fi
if [ "$lAnswer" = "-q" ] ; then G_STATE="S_END"
elif [ "$lAnswer" = "-i" ] ; then G_STATE="S_INIT" 
elif [ "$lAnswer" = "-a" ] ; then G_STATE="S_ADMIN"
elif [ "$lAnswer" = "-v" ] ; then G_STATE="S_PYTHON_COMPILE"
elif [ "$lAnswer" != "" ] ; then G_STATE="S_PYTHON_COMPILE_PYTHON_TARGET" ; G_PYTHON_COMPILO="$lAnswer"
fi
}
#================================================
GPython_PYTHON_COMPILE_PYTHON_TARGET() {
read -p "G_PYTHON_TARGET ($G_PYTHON_TARGET) ? " lAnswer
if [ "$lAnswer" = "" ] ; then lAnswer="$G_PYTHON_TARGET" ; fi
if [ "$lAnswer" = "-q" ] ; then G_STATE="S_END"
elif [ "$lAnswer" = "-i" ] ; then G_STATE="S_INIT" 
elif [ "$lAnswer" = "-a" ] ; then G_STATE="S_ADMIN"
elif [ "$lAnswer" = "-v" ] ; then G_STATE="S_PYTHON_COMPILE"
elif [ "$lAnswer" != "" ] ; then G_STATE="S_PYTHON_COMPILE_PYTHON_ARGS" ; G_PYTHON_TARGET="$lAnswer"
fi
}
#================================================
GPython_PYTHON_COMPILE_PYTHON_ARGS() {
read -p "G_PYTHON_ARGS ($G_PYTHON_ARGS) ? " lAnswer
if [ "$lAnswer" = "" ] ; then lAnswer="$G_PYTHON_ARGS" ; fi
if [ "$lAnswer" = "-q" ] ; then G_STATE="S_END"
elif [ "$lAnswer" = "-i" ] ; then G_STATE="S_INIT" 
elif [ "$lAnswer" = "-a" ] ; then G_STATE="S_ADMIN"
elif [ "$lAnswer" = "-v" ] ; then G_STATE="S_PYTHON_COMPILE"
elif [ "$lAnswer" = "-z" ] ; then G_STATE="S_PYTHON_COMPILE" ; G_PYTHON_ARGS=""
elif [ "$lAnswer" != "" ] ; then G_STATE="S_PYTHON_COMPILE" ; G_PYTHON_ARGS="$lAnswer"
fi
}
#================================================
GPython_PYTHON_COMPILE() {
echo
lBuldPath="$G_PYTHON_PATH/$G_PYTHON_NAME/unix"
lMakefile="Makefile"
if [ "$G_PYTHON_COMPILO" != "" ] ; then lMakefile="${lMakefile}.$G_PYTHON_COMPILO" ; fi
cd $lBuldPath
make -f "$lMakefile" "$G_PYTHON_TARGET" GARGS="$G_PYTHON_ARGS"
G_STATE="S_SAVE"
}
#================================================
GPython_TEST_COMPILE_TEST_PATH() {
read -p "G_TEST_PATH ($G_TEST_PATH) ? " lAnswer
if [ "$lAnswer" = "" ] ; then lAnswer="$G_TEST_PATH" ; fi
if [ "$lAnswer" = "-q" ] ; then G_STATE="S_END"
elif [ "$lAnswer" = "-i" ] ; then G_STATE="S_INIT" 
elif [ "$lAnswer" = "-a" ] ; then G_STATE="S_ADMIN"
elif [ "$lAnswer" = "-v" ] ; then G_STATE="S_TEST_COMPILE"
elif [ "$lAnswer" != "" ] ; then G_STATE="S_TEST_COMPILE_TEST_NAME" ; G_TEST_PATH="$lAnswer"
fi
}
#================================================
GPython_TEST_COMPILE_TEST_NAME() {
read -p "G_TEST_NAME ($G_TEST_NAME) ? " lAnswer
if [ "$lAnswer" = "" ] ; then lAnswer="$G_TEST_NAME" ; fi
if [ "$lAnswer" = "-q" ] ; then G_STATE="S_END"
elif [ "$lAnswer" = "-i" ] ; then G_STATE="S_INIT" 
elif [ "$lAnswer" = "-a" ] ; then G_STATE="S_ADMIN"
elif [ "$lAnswer" = "-v" ] ; then G_STATE="S_TEST_COMPILE"
elif [ "$lAnswer" != "" ] ; then G_STATE="S_TEST_COMPILE_TEST_COMPILO" ; G_TEST_NAME="$lAnswer"
fi
}
#================================================
GPython_TEST_COMPILE_TEST_COMPILO() {
read -p "G_TEST_COMPILO ($G_TEST_COMPILO) ? " lAnswer
if [ "$lAnswer" = "" ] ; then lAnswer="$G_TEST_COMPILO" ; fi
if [ "$lAnswer" = "-q" ] ; then G_STATE="S_END"
elif [ "$lAnswer" = "-i" ] ; then G_STATE="S_INIT" 
elif [ "$lAnswer" = "-a" ] ; then G_STATE="S_ADMIN"
elif [ "$lAnswer" = "-v" ] ; then G_STATE="S_TEST_COMPILE"
elif [ "$lAnswer" != "" ] ; then G_STATE="S_TEST_COMPILE_TEST_TARGET" ; G_TEST_COMPILO="$lAnswer"
fi
}
#================================================
GPython_TEST_COMPILE_TEST_TARGET() {
read -p "G_TEST_TARGET ($G_TEST_TARGET) ? " lAnswer
if [ "$lAnswer" = "" ] ; then lAnswer="$G_TEST_TARGET" ; fi
if [ "$lAnswer" = "-q" ] ; then G_STATE="S_END"
elif [ "$lAnswer" = "-i" ] ; then G_STATE="S_INIT" 
elif [ "$lAnswer" = "-a" ] ; then G_STATE="S_ADMIN"
elif [ "$lAnswer" = "-v" ] ; then G_STATE="S_TEST_COMPILE"
elif [ "$lAnswer" != "" ] ; then G_STATE="S_TEST_COMPILE_TEST_ARGS" ; G_TEST_TARGET="$lAnswer"
fi
}
#================================================
GPython_TEST_COMPILE_TEST_ARGS() {
read -p "G_TEST_ARGS ($G_TEST_ARGS) ? " lAnswer
if [ "$lAnswer" = "" ] ; then lAnswer="$G_TEST_ARGS" ; fi
if [ "$lAnswer" = "-q" ] ; then G_STATE="S_END"
elif [ "$lAnswer" = "-i" ] ; then G_STATE="S_INIT" 
elif [ "$lAnswer" = "-a" ] ; then G_STATE="S_ADMIN"
elif [ "$lAnswer" = "-v" ] ; then G_STATE="S_TEST_COMPILE"
elif [ "$lAnswer" = "-z" ] ; then G_STATE="S_TEST_COMPILE" ; G_TEST_ARGS=""
elif [ "$lAnswer" != "" ] ; then G_STATE="S_TEST_COMPILE" ; G_TEST_ARGS="$lAnswer"
fi
}
#================================================
GPython_TEST_COMPILE() {
echo
lBuldPath="$G_TEST_PATH/$G_TEST_NAME/unix"
lMakefile="Makefile"
if [ "$G_TEST_COMPILO" != "" ] ; then lMakefile="${lMakefile}.$G_TEST_COMPILO" ; fi
cd $lBuldPath
make -f "$lMakefile" "$G_TEST_TARGET" GARGS="$G_TEST_ARGS"
G_STATE="S_SAVE"
}
#================================================
GPython_SAVE() {
gz_process_in "config_save" "G_PYTHON_ID" "$G_PYTHON_ID"
gz_process_in "config_save" "G_PYTHON_PATH" "$G_PYTHON_PATH"
gz_process_in "config_save" "G_PYTHON_NAME" "$G_PYTHON_NAME"
gz_process_in "config_save" "G_PYTHON_COMPILO" "$G_PYTHON_COMPILO"
gz_process_in "config_save" "G_PYTHON_TARGET" "$G_PYTHON_TARGET"
gz_process_in "config_save" "G_PYTHON_ARGS" "$G_PYTHON_ARGS"
gz_process_in "config_save" "G_TEST_PATH" "$G_TEST_PATH"
gz_process_in "config_save" "G_TEST_NAME" "$G_TEST_NAME"
gz_process_in "config_save" "G_TEST_COMPILO" "$G_TEST_COMPILO"
gz_process_in "config_save" "G_TEST_TARGET" "$G_TEST_TARGET"
gz_process_in "config_save" "G_TEST_ARGS" "$G_TEST_ARGS"
gz_process_in "config_save" "G_COPY_SRC" "$G_COPY_SRC"
gz_process_in "config_save" "G_COPY_DST" "$G_COPY_DST"
G_STATE="S_QUIT"
}
#================================================
GPython_LOAD() {
G_PYTHON_ID=$(gz_process_in "config_load" "G_PYTHON_ID")
G_PYTHON_PATH=$(gz_process_in "config_load" "G_PYTHON_PATH")
G_PYTHON_NAME=$(gz_process_in "config_load" "G_PYTHON_NAME")
G_PYTHON_COMPILO=$(gz_process_in "config_load" "G_PYTHON_COMPILO")
G_PYTHON_TARGET=$(gz_process_in "config_load" "G_PYTHON_TARGET")
G_PYTHON_ARGS=$(gz_process_in "config_load" "G_PYTHON_ARGS")
G_TEST_PATH=$(gz_process_in "config_load" "G_TEST_PATH")
G_TEST_NAME=$(gz_process_in "config_load" "G_TEST_NAME")
G_TEST_COMPILO=$(gz_process_in "config_load" "G_TEST_COMPILO")
G_TEST_TARGET=$(gz_process_in "config_load" "G_TEST_TARGET")
G_TEST_ARGS=$(gz_process_in "config_load" "G_TEST_ARGS")
G_COPY_SRC=$(gz_process_in "config_load" "G_COPY_SRC")
G_COPY_DST=$(gz_process_in "config_load" "G_COPY_DST")
G_STATE="S_METHOD"
}
#================================================
GPython_QUIT() {
echo
read -p "QUIT (Oui/[N]on) ? " lAnswer
if [ "$lAnswer" = "-q" ] ; then G_STATE="S_END"
elif [ "$lAnswer" = "-i" ] ; then G_STATE="S_INIT"
elif [ "$lAnswer" = "-a" ] ; then G_STATE="S_ADMIN"
elif [ "$lAnswer" = "o" ] ; then G_STATE="S_END"
elif [ "$lAnswer" = "n" ] ; then G_STATE="S_INIT"
elif [ "$lAnswer" = "" ] ; then G_STATE="S_INIT"
fi
}
#================================================
GPython_Main
#================================================
cd $GPWD
#================================================
