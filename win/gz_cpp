#!/bin/bash
#================================================
GPWD=$PWD
#================================================
GPATH=$(gz_config get GPATH) ; . $GPATH/.config
#================================================
lCheckIn="GCPP_BUILD" ; if [ "${!lCheckIn}" = "" ] || ! [ -d "${!lCheckIn}" ] ; then echo $(gz_color s "$lCheckIn ?" yellow fg) ; exit ; fi 
lCheckIn="GCPP_MAKEFILE" ; if [ "${!lCheckIn}" = "" ] ; then echo $(gz_color s "$lCheckIn ?" yellow fg) ; exit ; fi 
lCheckIn="GECLIPSE_PATH" ; if [ "${!lCheckIn}" = "" ] ; then echo $(gz_color s "$lCheckIn ?" yellow fg) ; exit ; fi 
lCheckIn="GJAVA_PATH" ; if [ "${!lCheckIn}" = "" ] ; then echo $(gz_color s "$lCheckIn ?" yellow fg) ; exit ; fi 
lCheckIn="GMINGW_PATH" ; if [ "${!lCheckIn}" = "" ] ; then echo $(gz_color s "$lCheckIn ?" yellow fg) ; exit ; fi 
#================================================
export "PATH=$GJAVA_PATH:$PATH"
export "PATH=$GMINGW_PATH:$PATH"
#================================================
GCpp_main() {
lArgSize="$#"
if [ "$lArgSize" = "0" ] ; then GCpp_help "$@"
else GCpp_process "$@" ; fi
}
#================================================
GCpp_help() {
lScript=$(gz_string filename "$0")
GSCRIPT="\t\033[0;35m${lScript}\033[0m"
GCOMMENT="\033[0;33m%s\033[0m"
GHELP="$GSCRIPT : $GCOMMENT\n"
GREQUEST="\033[36m%s\033[0m"
GPROCESS="$GSCRIPT $GREQUEST : $GCOMMENT\n"
printf "\n"
printf "%s\n" "Description:"
printf "\t%s\n" "Operations sur les applications c++."
printf "\n"
printf "%s\n" "Utilisation:"
printf "$GHELP" "afficher aide"
printf "$GPROCESS" "tes" "tester module"
printf "$GPROCESS" "ecl" "lancer eclipse"
printf "$GPROCESS" "com" "compiler module"
printf "$GPROCESS" "run" "executer module"
printf "$GPROCESS" "all" "compiler executer module"
printf "\n"
}
#================================================
GCpp_process() {
lArgSize="$#"
lArgCount=1
lRunFlag=0
while [ 1 ] ; do
if [ "$lArgCount" -gt "$lArgSize" ] ; then break ; fi
lKey=${!lArgCount} ; lArgCount=$(gz_string math "$lArgCount + 1")
# tes
if [ "$lKey" = "test" ] ; then 
GCpp_test ; lRunFlag=1
# ecl
elif [ "$lKey" = "ecl" ] ; then 
GCpp_eclipse ; lRunFlag=1
# com
elif [ "$lKey" = "com" ] ; then 
GCpp_compile ; lRunFlag=1
# run
elif [ "$lKey" = "run" ] ; then 
GCpp_run ; lRunFlag=1
# all
elif [ "$lKey" = "all" ] ; then 
GCpp_all ; lRunFlag=1
#
fi
done
if [ "$lRunFlag" = "0" ] ; then GCpp_help ; fi 
}
#================================================
GCpp_test() {
GCpp_run
}
#================================================
GCpp_eclipse() {
$GECLIPSE_PATH/eclipse
}
#================================================
GCpp_compile() {
cd $GCPP_BUILD
mingw32-make compile -f Makefile.config
cd $GPWD
}
#================================================
GCpp_run() {
cd $GCPP_BUILD
mingw32-make run -f Makefile.config
cd $GPWD
}
#================================================
GCpp_all() {
cd $GCPP_BUILD
mingw32-make -f Makefile.config
cd $GPWD
}
#================================================
GCpp_main "$@"
#================================================
