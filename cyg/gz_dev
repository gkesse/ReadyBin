#!/bin/bash
#================================================
GPWD=$PWD
#================================================
GPATH=$(gz_config get GPATH) ; . $GPATH/.config
#================================================
lCheckIn="GDEV_PATH" ; if [ "${!lCheckIn}" = "" ] || ! [ -d "${!lCheckIn}" ] ; then echo $(gz_color s "$lCheckIn ?" yellow fg) ; exit ; fi 
#================================================
GDev_main() {
lArgSize="$#"
if [ "$lArgSize" = "0" ] ; then GDev_help "$@"
else GDev_process "$@" ; fi
}
#================================================
GDev_help() {
lScript=$(gz_string filename "$0")
GSCRIPT="\t\033[0;35m${lScript}\033[0m"
GCOMMENT="\033[0;33m%s\033[0m"
GHELP="$GSCRIPT : $GCOMMENT\n"
GREQUEST="\033[36m%s\033[0m"
GPROCESS="$GSCRIPT $GREQUEST : $GCOMMENT\n"
printf "\n"
printf "%s\n" "Description:"
printf "\t%s\n" "Operations sur le dossier ReadyDev."
printf "\n"
printf "%s\n" "Utilisation:"
printf "$GHELP" "afficher aide"
printf "$GPROCESS" "git_s" "afficher status git"
printf "$GPROCESS" "git_a" "ajouter fichiers git"
printf "$GPROCESS" "git_c" "commiter modifications git"
printf "$GPROCESS" "git_p" "pousser modifications git"
printf "$GPROCESS" "git_pu" "tirer modifications git"
printf "$GPROCESS" "git_pa" "ajouter commiter valider modifications git"
printf "$GPROCESS" "git_sn" "initialiser nom utilisateur git"
printf "$GPROCESS" "git_se" "initialiser email utilisateur git"
printf "$GPROCESS" "git_ls" "lister config git"
printf "\n"
}
#================================================
GDev_process() {
lArgSize="$#"
lArgCount=1
lRunFlag=0
while [ 1 ] ; do
if [ "$lArgCount" -gt "$lArgSize" ] ; then break ; fi
lKey=${!lArgCount} ; lArgCount=$(gz_string math "$lArgCount + 1")
# git_s
if [ "$lKey" = "git_s" ] ; then 
GDev_git_status ; lRunFlag=1
# git_a
elif [ "$lKey" = "git_a" ] ; then 
GDev_git_add_all ; lRunFlag=1
# git_c
elif [ "$lKey" = "git_c" ] ; then 
GDev_git_commit ; lRunFlag=1
# git_p
elif [ "$lKey" = "git_p" ] ; then 
GDev_git_push ; lRunFlag=1
# git_pa
elif [ "$lKey" = "git_pa" ] ; then 
GDev_git_push_all ; lRunFlag=1
# git_pu
elif [ "$lKey" = "git_pu" ] ; then 
GDev_git_pull ; lRunFlag=1
# git_sn
elif [ "$lKey" = "git_sn" ] ; then 
lUsername=${!lArgCount} ; lArgCount=$(gz_string math "$lArgCount + 1")
GDev_git_set_user_name "$lUsername" ; lRunFlag=1
# git_se
elif [ "$lKey" = "git_se" ] ; then 
lEmail=${!lArgCount} ; lArgCount=$(gz_string math "$lArgCount + 1")
GDev_git_set_user_email "$lEmail" ; lRunFlag=1
# git_ls
elif [ "$lKey" = "git_ls" ] ; then 
GDev_git_config_list ; lRunFlag=1
#
fi
done
if [ "$lRunFlag" = "0" ] ; then GDev_help ; fi 
}
#================================================
GDev_git_status() {
cd $GDEV_PATH
git status
cd $GPWD
}
#================================================
GDev_git_add_all() {
cd $GDEV_PATH
git add --all
cd $GPWD
}
#================================================
GDev_git_commit() {
cd $GDEV_PATH
git commit -m "Initial Commit"
cd $GPWD
}
#================================================
GDev_git_push() {
cd $GDEV_PATH
git push -u origin master
cd $GPWD
}
#================================================
GDev_git_push_all() {
cd $GDEV_PATH
git add --all
git commit -m "Initial Commit"
git push -u origin master
cd $GPWD
}
#================================================
GDev_git_pull() {
cd $GDEV_PATH
git pull
cd $GPWD
}
#================================================
GDev_git_set_user_name() {
local lUsername=$1
cd $GDEV_PATH
git config --global user.name "$lUsername"
cd $GPWD
}
#================================================
GDev_git_set_user_email() {
local lEmail=$1
cd $GDEV_PATH
git config --global user.email "$lEmail"
cd $GPWD
}
#================================================
GDev_git_config_list() {
local lEmail=$1
git config --list
cd $GPWD
}
#================================================
GDev_main "$@"
#================================================
