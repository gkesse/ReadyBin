#!/bin/bash
#================================================
GPWD=$PWD
#================================================
G_STATE="S_INIT"
#================================================
GViews_Main() {
while [ 1 ] ; do
case "$G_STATE" in 
    "S_ADMIN") GViews_ADMIN ;;
    "S_INIT") GViews_INIT ;;
    "S_METHOD") GViews_METHOD ;;
    "S_CHOICE") GViews_CHOICE ;;
    #
    "S_CREATE_READYDEV_DB") GViews_CREATE_READYDEV_DB ;;
    "S_CREATE") GViews_CREATE ;;
    #
    "S_EXTRACT_READYDEV_DB") GViews_EXTRACT_READYDEV_DB ;;
    "S_EXTRACT") GViews_EXTRACT ;;
    #
    "S_ADD_READYDEV_DB") GViews_ADD_READYDEV_DB ;;
    "S_ADD_VIEW_KEY") GViews_ADD_VIEW_KEY ;;
    "S_ADD_VIEW_COUNT") GViews_ADD_VIEW_COUNT ;;
    "S_ADD") GViews_ADD ;;
    #
    "S_SHOW_READYDEV_DB") GViews_SHOW_READYDEV_DB ;;
    "S_SHOW") GViews_SHOW;;
    #
    "S_LOAD_DATA_READYDEV_DB") GViews_LOAD_DATA_READYDEV_DB ;;
    "S_LOAD_DATA_VIEW_PATH") GViews_LOAD_DATA_VIEW_PATH ;;
    "S_LOAD_DATA") GViews_LOAD_DATA ;;
    #
    "S_DELETE_READYDEV_DB") GViews_DELETE_READYDEV_DB ;;
    "S_DELETE_VIEW_KEY") GViews_DELETE_VIEW_KEY ;;
    "S_DELETE") GViews_DELETE ;;
    #
    "S_TABLES_SHOW_READYDEV_DB") GViews_TABLES_SHOW_READYDEV_DB ;;
    "S_TABLES_SHOW") GViews_TABLES_SHOW ;;
    #
    "S_SAVE") GViews_SAVE ;;
    "S_LOAD") GViews_LOAD ;;
    "S_QUIT") GViews_QUIT ;;
    *) break ;;
esac    
done
}
#================================================
GViews_ADMIN() {
gz_admin
G_STATE="S_END"
}
#================================================
GViews_INIT() {
printf "\n"
printf "VIEWS !!!\n"
printf "\t%2s : %s\n" "-q" "quitter l'application"
printf "\t%2s : %s\n" "-i" "reinitialiser l'application"
printf "\t%2s : %s\n" "-a" "redemarrer l'application"
printf "\t%2s : %s\n" "-v" "valider les configurations"
printf "\n"
G_STATE="S_LOAD"
}
#================================================
GViews_METHOD() {
printf "VIEWS :\n"
printf "\t%2s : %s\n" "1" "creer la table"
printf "\t%2s : %s\n" "2" "extraire le schema"
printf "\t%2s : %s\n" "3" "ajouter des donnees"
printf "\t%2s : %s\n" "4" "afficher les donnees"
printf "\t%2s : %s\n" "5" "supprimer une donnee"
printf "\n"
printf "\t%2s : %s\n" "10" "charger des donnees"
printf "\n"
printf "\t%2s : %s\n" "20" "afficher les tables"
printf "\n"
G_STATE="S_CHOICE"
}
#================================================
GViews_CHOICE() {
read -p "VIEWS ($G_VIEWS_ID) ? " lAnswer
if [ "$lAnswer" = "" ] ; then lAnswer="$G_VIEWS_ID" ; fi
if [ "$lAnswer" = "-q" ] ; then G_STATE="S_END"
elif [ "$lAnswer" = "-i" ] ; then G_STATE="S_INIT" 
elif [ "$lAnswer" = "-a" ] ; then G_STATE="S_ADMIN"
#
elif [ "$lAnswer" = "1" ] ; then G_STATE="S_CREATE_READYDEV_DB" ; G_VIEWS_ID="$lAnswer"
elif [ "$lAnswer" = "2" ] ; then G_STATE="S_EXTRACT_READYDEV_DB" ; G_VIEWS_ID="$lAnswer"
elif [ "$lAnswer" = "3" ] ; then G_STATE="S_ADD_READYDEV_DB" ; G_VIEWS_ID="$lAnswer"
elif [ "$lAnswer" = "4" ] ; then G_STATE="S_SHOW_READYDEV_DB" ; G_VIEWS_ID="$lAnswer"
elif [ "$lAnswer" = "5" ] ; then G_STATE="S_DELETE_READYDEV_DB" ; G_VIEWS_ID="$lAnswer"
#
elif [ "$lAnswer" = "10" ] ; then G_STATE="S_LOAD_DATA_READYDEV_DB" ; G_VIEWS_ID="$lAnswer"
#
elif [ "$lAnswer" = "20" ] ; then G_STATE="S_TABLES_SHOW_READYDEV_DB" ; G_VIEWS_ID="$lAnswer"
fi
}
#================================================
GViews_TABLES_SHOW_READYDEV_DB() {
read -p "G_READYDEV_DB ($G_READYDEV_DB) ? " lAnswer
if [ "$lAnswer" = "" ] ; then lAnswer="$G_READYDEV_DB" ; fi
if [ "$lAnswer" = "-q" ] ; then G_STATE="S_END"
elif [ "$lAnswer" = "-i" ] ; then G_STATE="S_INIT"
elif [ "$lAnswer" = "-a" ] ; then G_STATE="S_ADMIN"
elif [ "$lAnswer" = "-v" ] ; then G_STATE="S_TABLES_SHOW"
elif [ "$lAnswer" != "" ] ; then G_STATE="S_TABLES_SHOW" ; G_READYDEV_DB="$lAnswer"
fi
}
#================================================
GViews_TABLES_SHOW() {
printf "\n"
gz_process_in "sqlite_query" "$G_READYDEV_DB" "
.tables
"
G_STATE="S_SAVE"
}
#================================================
GViews_DELETE_READYDEV_DB() {
read -p "G_READYDEV_DB ($G_READYDEV_DB) ? " lAnswer
if [ "$lAnswer" = "" ] ; then lAnswer="$G_READYDEV_DB" ; fi
if [ "$lAnswer" = "-q" ] ; then G_STATE="S_END"
elif [ "$lAnswer" = "-i" ] ; then G_STATE="S_INIT"
elif [ "$lAnswer" = "-a" ] ; then G_STATE="S_ADMIN"
elif [ "$lAnswer" = "-v" ] ; then G_STATE="S_DELETE"
elif [ "$lAnswer" != "" ] ; then G_STATE="S_DELETE_VIEW_KEY" ; G_READYDEV_DB="$lAnswer"
fi
}
#================================================
GViews_DELETE_VIEW_KEY() {
read -p "G_VIEW_KEY ($G_VIEW_KEY) ? " lAnswer
if [ "$lAnswer" = "" ] ; then lAnswer="$G_VIEW_KEY" ; fi
if [ "$lAnswer" = "-q" ] ; then G_STATE="S_END"
elif [ "$lAnswer" = "-i" ] ; then G_STATE="S_INIT"
elif [ "$lAnswer" = "-a" ] ; then G_STATE="S_ADMIN"
elif [ "$lAnswer" = "-v" ] ; then G_STATE="S_DELETE"
elif [ "$lAnswer" = "-z" ] ; then G_STATE="S_DELETE" ; G_VIEW_KEY=""
elif [ "$lAnswer" = "-z" ] ; then G_STATE="S_DELETE" ; G_VIEW_KEY=""
elif [ "$lAnswer" != "" ] ; then G_STATE="S_DELETE" ; G_VIEW_KEY="$lAnswer"
fi
}
#================================================
GViews_DELETE() {
printf "\n"
G_VIEW_KEY=$(echo "$G_VIEW_KEY" | tr '[:upper:]' '[:lower:]')
. gz_process_in "confirm"
if [ "$G_CONFIRM_IN" = "o" ] ; then
gz_process_in "sqlite_query" "$G_READYDEV_DB" "
delete from VIEWS 
where VIEW_KEY='$G_VIEW_KEY'
" 
fi
G_STATE="S_SAVE"
}
#================================================
GViews_LOAD_DATA_READYDEV_DB() {
read -p "G_READYDEV_DB ($G_READYDEV_DB) ? " lAnswer
if [ "$lAnswer" = "" ] ; then lAnswer="$G_READYDEV_DB" ; fi
if [ "$lAnswer" = "-q" ] ; then G_STATE="S_END"
elif [ "$lAnswer" = "-i" ] ; then G_STATE="S_INIT"
elif [ "$lAnswer" = "-a" ] ; then G_STATE="S_ADMIN"
elif [ "$lAnswer" = "-v" ] ; then G_STATE="S_LOAD_DATA" ; G_READYDEV_DB="$lAnswer"
elif [ "$lAnswer" != "" ] ; then G_STATE="S_LOAD_DATA_VIEW_PATH" ; G_READYDEV_DB="$lAnswer"
fi
}
#================================================
GViews_LOAD_DATA_VIEW_PATH() {
read -p "G_VIEW_PATH ($G_VIEW_PATH) ? " lAnswer
if [ "$lAnswer" = "" ] ; then lAnswer="$G_VIEW_PATH" ; fi
if [ "$lAnswer" = "-q" ] ; then G_STATE="S_END"
elif [ "$lAnswer" = "-i" ] ; then G_STATE="S_INIT"
elif [ "$lAnswer" = "-a" ] ; then G_STATE="S_ADMIN"
elif [ "$lAnswer" = "-v" ] ; then G_STATE="S_LOAD_DATA" ; G_READYDEV_DB="$lAnswer"
elif [ "$lAnswer" != "" ] ; then G_STATE="S_LOAD_DATA" ; G_VIEW_PATH="$lAnswer"
fi
}
#================================================
GViews_LOAD_DATA() {
printf "\n"
jq "." "$G_VIEW_PATH" | \
while read lLine; do
lCount=$(echo "$lLine" | awk -F ":" '{printf("%s\n", NF)}')
if [ "$lCount" = "1" ] ; then continue ; fi
lKey=$(echo "$lLine" | awk -F "\"" '{printf("%s\n", $2)}')
lValue=$(echo "$lLine" | awk -F ":" '{printf("%s\n", $2)}' | awk '{printf("%s\n", $1)}' | awk -F "," '{printf("%s\n", $1)}')
lKey=$(echo "$lKey" | tr '[:upper:]' '[:lower:]')
GViews_VIEW_SAVE "$lKey" "$lValue"
done
G_STATE="S_SAVE"
printf "\n"
}
#================================================
GViews_SHOW_READYDEV_DB() {
read -p "G_READYDEV_DB ($G_READYDEV_DB) ? " lAnswer
if [ "$lAnswer" = "" ] ; then lAnswer="$G_READYDEV_DB" ; fi
if [ "$lAnswer" = "-q" ] ; then G_STATE="S_END"
elif [ "$lAnswer" = "-i" ] ; then G_STATE="S_INIT"
elif [ "$lAnswer" = "-a" ] ; then G_STATE="S_ADMIN"
elif [ "$lAnswer" != "" ] ; then G_STATE="S_SHOW" ; G_READYDEV_DB="$lAnswer"
fi
}
#================================================
GViews_SHOW() {
printf "\n"
gz_process_in "sqlite_show" "$G_READYDEV_DB" "on" "
select * from VIEWS
"
G_STATE="S_SAVE"
}
#================================================
GViews_ADD_READYDEV_DB() {
read -p "G_READYDEV_DB ($G_READYDEV_DB) ? " lAnswer
if [ "$lAnswer" = "" ] ; then lAnswer="$G_READYDEV_DB" ; fi
if [ "$lAnswer" = "-q" ] ; then G_STATE="S_END"
elif [ "$lAnswer" = "-i" ] ; then G_STATE="S_INIT"
elif [ "$lAnswer" = "-a" ] ; then G_STATE="S_ADMIN"
elif [ "$lAnswer" = "-v" ] ; then G_STATE="S_ADD" ; G_READYDEV_DB="$lAnswer"
elif [ "$lAnswer" != "" ] ; then G_STATE="S_ADD_VIEW_KEY" ; G_READYDEV_DB="$lAnswer"
fi
}
#================================================
GViews_ADD_VIEW_KEY() {
read -p "G_VIEW_KEY ($G_VIEW_KEY) ? " lAnswer
if [ "$lAnswer" = "" ] ; then lAnswer="$G_VIEW_KEY" ; fi
if [ "$lAnswer" = "-q" ] ; then G_STATE="S_END"
elif [ "$lAnswer" = "-i" ] ; then G_STATE="S_INIT"
elif [ "$lAnswer" = "-a" ] ; then G_STATE="S_ADMIN"
elif [ "$lAnswer" = "-v" ] ; then G_STATE="S_ADD" ; G_READYDEV_DB="$lAnswer"
elif [ "$lAnswer" != "" ] ; then G_STATE="S_ADD_VIEW_COUNT" ; G_VIEW_KEY="$lAnswer"
fi
}
#================================================
GViews_ADD_VIEW_COUNT() {
read -p "G_VIEW_COUNT ($G_VIEW_COUNT) ? " lAnswer
if [ "$lAnswer" = "" ] ; then lAnswer="$G_VIEW_COUNT" ; fi
if [ "$lAnswer" = "-q" ] ; then G_STATE="S_END"
elif [ "$lAnswer" = "-i" ] ; then G_STATE="S_INIT"
elif [ "$lAnswer" = "-a" ] ; then G_STATE="S_ADMIN"
elif [ "$lAnswer" = "-v" ] ; then G_STATE="S_ADD" ; G_READYDEV_DB="$lAnswer"
elif [ "$lAnswer" != "" ] ; then G_STATE="S_ADD" ; G_VIEW_COUNT="$lAnswer"
fi
}
#================================================
GViews_ADD() {
printf "\n"
G_VIEW_KEY=$(echo "$G_VIEW_KEY" | tr '[:upper:]' '[:lower:]')
GViews_VIEW_SAVE "$G_VIEW_KEY" "$G_VIEW_COUNT"
gz_process_in "sqlite_show" "$G_READYDEV_DB" "on" "
select * from VIEWS
where VIEW_KEY='$G_VIEW_KEY'
"
G_STATE="S_SAVE"
printf "\n"
}
#================================================
GViews_EXTRACT_READYDEV_DB() {
read -p "G_READYDEV_DB ($G_READYDEV_DB) ? " lAnswer
if [ "$lAnswer" = "" ] ; then lAnswer="$G_READYDEV_DB" ; fi
if [ "$lAnswer" = "-q" ] ; then G_STATE="S_END"
elif [ "$lAnswer" = "-i" ] ; then G_STATE="S_INIT"
elif [ "$lAnswer" = "-a" ] ; then G_STATE="S_ADMIN"
elif [ "$lAnswer" = "-v" ] ; then G_STATE="S_EXTRACT" ; G_READYDEV_DB="$lAnswer"
elif [ "$lAnswer" != "" ] ; then G_STATE="S_EXTRACT" ; G_READYDEV_DB="$lAnswer"
fi
}
#================================================
GViews_EXTRACT() {
echo
gz_process_in "sqlite_query" "$G_READYDEV_DB" "
.schema VIEWS
"
G_STATE="S_SAVE"
}
#================================================
GViews_CREATE_READYDEV_DB() {
read -p "G_READYDEV_DB ($G_READYDEV_DB) ? " lAnswer
if [ "$lAnswer" = "" ] ; then lAnswer="$G_READYDEV_DB" ; fi
if [ "$lAnswer" = "-q" ] ; then G_STATE="S_END"
elif [ "$lAnswer" = "-i" ] ; then G_STATE="S_INIT"
elif [ "$lAnswer" = "-a" ] ; then G_STATE="S_ADMIN"
elif [ "$lAnswer" = "-v" ] ; then G_STATE="S_CREATE" ; G_READYDEV_DB="$lAnswer"
elif [ "$lAnswer" != "" ] ; then G_STATE="S_CREATE" ; G_READYDEV_DB="$lAnswer"
fi
}
#================================================
GViews_CREATE() {
. gz_process_in "confirm"
if [ "$G_CONFIRM_IN" = "o" ] ; then
gz_process_in "sqlite_query" "$G_READYDEV_DB" "
create table VIEWS (
VIEW_KEY text primary key not null,
VIEW_COUNT integer
)
"
fi
G_STATE="S_SAVE"
}
#================================================
GViews_SAVE() {
gz_process_in "config_save" "G_VIEWS_ID" "$G_VIEWS_ID"
gz_process_in "config_save" "G_READYDEV_DB" "$G_READYDEV_DB"
gz_process_in "config_save" "G_VIEW_KEY" "$G_VIEW_KEY"
gz_process_in "config_save" "G_VIEW_COUNT" "$G_VIEW_COUNT"
gz_process_in "config_save" "G_VIEW_PATH" "$G_VIEW_PATH"
G_STATE="S_QUIT"
}
#================================================
GViews_LOAD() {
G_VIEWS_ID=$(gz_process_in "config_load" "G_VIEWS_ID")
G_READYDEV_DB=$(gz_process_in "config_load" "G_READYDEV_DB")
G_VIEW_KEY=$(gz_process_in "config_load" "G_VIEW_KEY")
G_VIEW_COUNT=$(gz_process_in "config_load" "G_VIEW_COUNT")
G_VIEW_PATH=$(gz_process_in "config_load" "G_VIEW_PATH") 
G_STATE="S_METHOD"
}
#================================================
GViews_QUIT() {
echo
read -p "QUIT (Oui/[N]on) ? " lAnswer
if [ "$lAnswer" = "-q" ] ; then G_STATE="S_END"
elif [ "$lAnswer" = "-i" ] ; then G_STATE="S_INIT"
elif [ "$lAnswer" = "-a" ] ; then G_STATE="S_ADMIN"
elif [ "$lAnswer" = "o" ] ; then G_STATE="S_END"
elif [ "$lAnswer" = "n" ] ; then G_STATE="S_INIT"
elif [ "$lAnswer" = "" ] ; then G_STATE="S_INIT"
fi
}
#================================================
GViews_VIEW_SAVE() {
lCheck=$(GViews_VIEW_CHECK "$1")
if [ "$lCheck" = "0" ] ; then GViews_VIEW_INSERT "$1" "$2"
else GViews_VIEW_UPDATE "$1" "$2"
fi
}
#================================================
GViews_VIEW_CHECK() {
gz_process_in "sqlite_query" "$G_READYDEV_DB" "
select count(*) from VIEWS
where VIEW_KEY='$1'
"
}
#================================================
GViews_VIEW_INSERT() {
gz_process_in "sqlite_query" "$G_READYDEV_DB" "
insert into VIEWS (VIEW_KEY, VIEW_COUNT)
values ('$1', $2)
"
}
#================================================
GViews_VIEW_UPDATE() {
gz_process_in "sqlite_query" "$G_READYDEV_DB" "
update VIEWS 
set VIEW_COUNT=$2
where VIEW_KEY='$1'
"
}
#================================================
GViews_Main
#================================================
cd $GPWD
#================================================
