#!/bin/bash
#================================================
GPWD=$PWD
#================================================
G_STATE="S_INIT"
#================================================
GBin_Main() {
while [ 1 ] ; do
case "$G_STATE" in 
    "S_ADMIN") GBin_ADMIN ;;
    "S_INIT") GBin_INIT ;;
    "S_METHOD") GBin_METHOD ;;
    "S_CHOICE") GBin_CHOICE ;;
    #
    "S_CREATE_SCRIPT_NAME") GBin_CREATE_SCRIPT_NAME ;;
    "S_CREATE") GBin_CREATE ;;
    #
    "S_CYGPATH_W2U_WIN_PATH") GBin_CYGPATH_W2U_WIN_PATH ;;
    "S_CYGPATH_W2U") GBin_CYGPATH_W2U ;;
    #
    "S_PKGCONFIG_LIBS_PKG_NAME") GBin_PKGCONFIG_LIBS_PKG_NAME ;;
    "S_PKGCONFIG_LIBS") GBin_PKGCONFIG_LIBS ;;
    #
    "S_PKGCONFIG_FLAG_PKG_NAME") GBin_PKGCONFIG_FLAG_PKG_NAME ;;
    "S_PKGCONFIG_FLAG") GBin_PKGCONFIG_FLAG ;;
    #
    "S_SAVE") GBin_SAVE ;;
    "S_LOAD") GBin_LOAD ;;
    "S_QUIT") GBin_QUIT ;;
    *) break ;;
esac    
done
}
#================================================
GBin_ADMIN() {
gz_admin
G_STATE="S_END"
}
#================================================
GBin_INIT() {
printf "\n"
printf "BIN !!!\n"
printf "\t%2s : %s\n" "-q" "quitter l'application"
printf "\t%2s : %s\n" "-i" "reinitialiser l'application"
printf "\t%2s : %s\n" "-a" "redemarrer l'administration"
printf "\t%2s : %s\n" "-v" "valider les configurations"
printf "\n"
G_STATE="S_LOAD"
}
#================================================
GBin_METHOD() {
printf "BIN :\n"
printf "\t%2s : %s\n" "1" "creer un script"
printf "\t%2s : %s\n" "2" "convertir un chemin Windows"
printf "\n"
printf "\t%2s : %s\n" "10" "S_PKGCONFIG_LIBS"
printf "\t%2s : %s\n" "11" "S_PKGCONFIG_FLAG"
printf "\n"
G_STATE="S_CHOICE"
}
#================================================
GBin_CHOICE() {
read -p "BIN ($G_BIN_ID) ? " lAnswer
if [ "$lAnswer" = "" ] ; then lAnswer="$G_BIN_ID" ; fi
if [ "$lAnswer" = "-q" ] ; then G_STATE="S_END"
elif [ "$lAnswer" = "-i" ] ; then G_STATE="S_INIT" 
elif [ "$lAnswer" = "-a" ] ; then G_STATE="S_ADMIN"
#
elif [ "$lAnswer" = "1" ] ; then G_STATE="S_CREATE_SCRIPT_NAME" ; G_BIN_ID="$lAnswer"
elif [ "$lAnswer" = "2" ] ; then G_STATE="S_CYGPATH_W2U_WIN_PATH" ; G_BIN_ID="$lAnswer"
#
elif [ "$lAnswer" = "10" ] ; then G_STATE="S_PKGCONFIG_LIBS_PKG_NAME" ; G_BIN_ID="$lAnswer"
elif [ "$lAnswer" = "11" ] ; then G_STATE="S_PKGCONFIG_FLAG_PKG_NAME" ; G_BIN_ID="$lAnswer"
#
fi
}
#================================================
GBin_CYGPATH_W2U_WIN_PATH() {
read -p "G_WIN_PATH ($G_WIN_PATH) ? " lAnswer
if [ "$lAnswer" = "" ] ; then lAnswer="$G_WIN_PATH" ; fi
if [ "$lAnswer" = "-q" ] ; then G_STATE="S_END"
elif [ "$lAnswer" = "-i" ] ; then G_STATE="S_INIT"
elif [ "$lAnswer" = "-a" ] ; then G_STATE="S_ADMIN"
elif [ "$lAnswer" = "-v" ] ; then G_STATE="S_CYGPATH_W2U" ; G_WIN_PATH="$lAnswer"
elif [ "$lAnswer" != "" ] ; then G_STATE="S_CYGPATH_W2U" ; G_WIN_PATH="$lAnswer"
fi
}
#================================================
GBin_CYGPATH_W2U() {
echo
cygpath -u "$G_WIN_PATH"
G_STATE="S_SAVE"
}
#================================================
GBin_CREATE_SCRIPT_NAME() {
read -p "G_SCRIPT_NAME ($G_SCRIPT_NAME) ? " lAnswer
if [ "$lAnswer" = "" ] ; then lAnswer="$G_SCRIPT_NAME" ; fi
if [ "$lAnswer" = "-q" ] ; then G_STATE="S_END"
elif [ "$lAnswer" = "-i" ] ; then G_STATE="S_INIT"
elif [ "$lAnswer" = "-a" ] ; then G_STATE="S_ADMIN"
elif [ "$lAnswer" = "-v" ] ; then G_STATE="S_CREATE" ; G_SCRIPT_NAME="$lAnswer"
elif [ "$lAnswer" != "" ] ; then G_STATE="S_CREATE" ; G_SCRIPT_NAME="$lAnswer"
fi
}
#================================================
GBin_CREATE() {
lFile="$GPATH/$G_SCRIPT_NAME"
vim $lFile
chmod 777 $lFile
G_STATE="S_SAVE"
}
#================================================
GBin_PKGCONFIG_LIBS_PKG_NAME() {
read -p "G_PKG_NAME ($G_PKG_NAME) ? " lAnswer
if [ "$lAnswer" = "" ] ; then lAnswer="$G_PKG_NAME" ; fi
if [ "$lAnswer" = "-q" ] ; then G_STATE="S_END"
elif [ "$lAnswer" = "-i" ] ; then G_STATE="S_INIT"
elif [ "$lAnswer" = "-a" ] ; then G_STATE="S_ADMIN"
elif [ "$lAnswer" = "-v" ] ; then G_STATE="S_PKGCONFIG_LIBS" ; G_PKG_NAME="$lAnswer"
elif [ "$lAnswer" != "" ] ; then G_STATE="S_PKGCONFIG_LIBS" ; G_PKG_NAME="$lAnswer"
fi
}
#================================================
GBin_PKGCONFIG_LIBS() {
echo
. "$GPATH/.env"
pkg-config --libs "$G_PKG_NAME"
G_STATE="S_SAVE"
}
#================================================
GBin_PKGCONFIG_FLAG_PKG_NAME() {
read -p "G_PKG_NAME ($G_PKG_NAME) ? " lAnswer
if [ "$lAnswer" = "" ] ; then lAnswer="$G_PKG_NAME" ; fi
if [ "$lAnswer" = "-q" ] ; then G_STATE="S_END"
elif [ "$lAnswer" = "-i" ] ; then G_STATE="S_INIT"
elif [ "$lAnswer" = "-a" ] ; then G_STATE="S_ADMIN"
elif [ "$lAnswer" = "-v" ] ; then G_STATE="S_PKGCONFIG_FLAG" ; G_PKG_NAME="$lAnswer"
elif [ "$lAnswer" != "" ] ; then G_STATE="S_PKGCONFIG_FLAG" ; G_PKG_NAME="$lAnswer"
fi
}
#================================================
GBin_PKGCONFIG_FLAG() {
echo
. "$GPATH/.env"
pkg-config --cflags "$G_PKG_NAME"
G_STATE="S_SAVE"
}
#================================================
GBin_SAVE() {
gz_process_in "config_save" "G_BIN_ID" "$G_BIN_ID"
gz_process_in "config_save" "G_SCRIPT_NAME" "$G_SCRIPT_NAME"
gz_process_in "config_save" "G_WIN_PATH" "$G_WIN_PATH"
gz_process_in "config_save" "G_PKG_NAME" "$G_PKG_NAME"
G_STATE="S_QUIT"
}
#================================================
GBin_LOAD() {
G_BIN_ID=$(gz_process_in "config_load" "G_BIN_ID")
G_SCRIPT_NAME=$(gz_process_in "config_load" "G_SCRIPT_NAME")
G_WIN_PATH=$(gz_process_in "config_load" "G_WIN_PATH")
G_PKG_NAME=$(gz_process_in "config_load" "G_PKG_NAME")
G_STATE="S_METHOD"
}
#================================================
GBin_QUIT() {
echo
read -p "QUIT (Oui/[N]on) ? " lAnswer
if [ "$lAnswer" = "-q" ] ; then G_STATE="S_END"
elif [ "$lAnswer" = "-i" ] ; then G_STATE="S_INIT"
elif [ "$lAnswer" = "-a" ] ; then G_STATE="S_ADMIN"
elif [ "$lAnswer" = "o" ] ; then G_STATE="S_END"
elif [ "$lAnswer" = "n" ] ; then G_STATE="S_INIT"
elif [ "$lAnswer" = "" ] ; then G_STATE="S_INIT"
fi
}
#================================================
GBin_Main
#================================================
cd $GPWD
#================================================
